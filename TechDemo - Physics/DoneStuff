/**           /**
*               *
* Coisas feitas *
*               *
**/           **/



Até 19 de Maio de 2013

- Fazer fogo e fumo nas walls
- Criado .h de constantes
- Melhorado Select Level layer
- Acabar parte dos níveis
    - Fazer método no gamemanager RunLevelNumber: (int) levelNumber
    - Fica dinâmico e recebe o parametro do thumbnail que é criado no selectLevelLayer
- 5 níveis criados
- Criar classe gameState para fazer track dos resources e estado do jogo
- Passar projecto para deployment target 6.1
    - alterei o cocos para o efeito :p
- Gold também já é persistente
- HUD
    - mudar botões para toggles
    - posicionar melhor botoes por todo o lado
- Optimizacoes brutais no carregamento dos niveis
    - Falta correr profiler nisto
- Criei a classe LoadingBar mas ignorem pra ja, obg. Estou a investigar multithreading
- spritesheet com cenas de menus
    - ver se esta no sitio cert
    - por a carregar no sitio certo
- spritesheet com cenas de jogo (incluindo castelo)
    - carregar no sitio certo
- Passar para os arqueiros do heroes  (João M)
    - Tratar das sprites do wood elf e do grand elf
- Destruição mais eficiente de projecteis
- Nível do yuri
- Skill points actuais
- As custom fonts têm de ser assinaladas no info.plist
- Acabar com o LevelLayerAbstract - Deixou de fazer sentido
- Quando se mete pause e sai do jogo, quando volta ele tira o pause
    - é preciso não deixar isso acontecer
- Fazer Reset ao NSUserDefaults (uma setting no SettingsLayer, método ja está criado, mas n testado, no gamestate)
- Random shouts dos inimigos
- FIX PAUSE MENU
- Lógica de gastar e regenerar mana
- Corrigir spritesheet normal com botões de poderes
- Fazer Spritesheets de 2048x2048 max (e não se mexem mais)
- Por skill tree numa spritesheet com trimming
- Sprites of enemies
- Nova variável com total do skill points
- Implementar skill tree - implementar a lógica e ver se fazemos uma spritesheet de bocadinhos para melhorar a performance (Daniela)
- Inimigos novos: Fire Elemental, Wraith, Skeleton, Black Dragon
- BURACOS DE MEMORIA ARGHHGHGHGH
    - Nao percebo a skill tree
- Fraquezas e resistencias dos inimigos
- Lógica das fraquezas e resistencias implementada
- Damage over time working 
- Lógica do path of the marksman
    - Strength bonus
    - Speed bonus
    - Critical ratio
- Definir bonus passivos dos níveis do Yuri
- Slow Down implementado (com mts bugs relacionados corrigidos)
- Yuri já não dispara quando clicamos atrás dele
- Particulas das fire arrows e slow arrows
- Na skill tree botão para fazer reset
- Skill tree não se inicializa com as sprites das coisas compradas (solved?)
- No game over: Retry, Skill Tree
- Return to skill tree no pause
- Bichos aleatórios (definir um número deles por nível (entre waves, por exemplo)
- Normalizar posiçoes de botoes iguais
    - No win: Play next chapter, Skill Tree
- Número de estrelas ganhas no final de cada nível
-botao reset skill points
- Passar includes para .h
- Custo de arrows
    - Custo de reparação
    - Achievements unlocked warning
- Velocidade da wraith inicial (taunt) mais rapido
- Flechas mais rapidas
- Storyboards
// Array de dicionários
 Cada dicionário com:
    - text
    - image
    - orientation - referencia uma animação
- Taunting:
    - tá hardcoded para a wraith. Generalizar/Fazer para mais
- Winter background (summer)
- Sprite do reset leaderboard
- Dendroids!
- Foto do boneco do poster para por no storyboard
- Quando se tira o pause o yuri dispara flechinha
- Volume separado de fx e music
- história e tutorial
- Inimigos aleatórios estão a aparecer mt em baixo (é necessario somar metade da height na posição)
    - Som nas explosões
- Feedback de poucas flechas - como o get ready
- Skill points por achievements






Até 22 de Abril de 2013

- Criar pixel perfect collisions
- Criada estrutura base para o projecto
- Criadas colisões simples
- Actualizar background!
- Seleccionadas algumas musicas
- Adicionar som
- Tornar sprites mais visíveis -> Aumentar sprites
- Por inimigos a não vir no céu
- Splash screen
- Posicionar Yuri e flechas
- Add repeater do João
- Criado EnemyFactory (Singleton)
- Criar Toggle button!!
- Som de destruição (corrigir)
- Criado delay entre flechas no swipe
- zOrdering
- Factor de escala no retina
- Modo de disparo a funcionar bem
- Fazer animações simples (Daniela)
- Logótipo (PS)
- Dividir sprites do castelo em duas (PS)
- Lógica de dano da wall com todas as sprites
- Colisões entre Wall e Enemies
- Comportamento de ataque do peasant
- Mudança de animação do peasant
- Mt lento a mudar de castelo. Talvez seja melhor estar na sprite sheet
    - Resolvido carregando todas as sprites no init
    - Fica hardcoded, mas MUITO mais eficiente - Continua a poder ser possível meter na spritesheet
- Corrigir spritesheet com sprites mais recentes
- Adicionados dragões!
- Temporizações de entrada
- Criado Zealot
- Novas sprites e ataque do dragão
- Moat usage!
- Por iPads a funcionar por causa do Nojo (na pior das hipoteses tem de funcionar no do João M) DONE!
- Passar NSMutable para CCArrays (Amaral e Ricardo) DONE!
- Perceber ao certo os outputs de erro do CCSpriteFrameCache (Daniela)
- Por iPads a funcionar por causa do Nojo (na pior das hipoteses tem de funcionar no do João M)
- Passar NSMutable para CCArrays (Amaral e Ricardo)
- Resolver problemas das sprites do castelo e do moat
- inicializar som do jogo
- Particle System para dentro dos sprites (João M)
    - (Optimizar particle system) 
    - Tornar aquilo um projectile
    - Passar codigo do projectile para arrow
- Implementação de estimulos (StimulousPackage - Damage, Fire, Ice) (João M)
- zOrdering (Amaral) à espera dos menus para verificar... ver secção
- Projectiles mais piquenos! Yuri maior (ps) - DONE, falta zwoptex
- Sprites de morte dos inimigos (ps) - Done, falta implementar
- Sprites Idle do yuri (ps) - Done,
- Posição e rotação da flecha corrigida
- Implementação de estimulos (StimulousPackage - Damage, Fire, Ice) (João M)
- Sprites de morte dos inimigos (ps) - Done
- Wall está a ser destruída magicamente - Done
- Desenhar GUI (???) (health and other debug info)
- Desenhar Skill Tree (ps)
- Vida da wall
- Limitar as setas disparadas (quando acabam comeaça os nums negativos)
- Background sound para assim que começa
- Por dano apenas quando inimigos acabam o movimento (callback)
- ResourceManager - um singleton de variáveis de jogo
- Registry - um singleton para acedermos a entidades do jogo
- Impedir a animacao de disparo do Yuri quando nao ha setas
- Estrutura de pastas actualizada dentro do eks code
- Modo de interacção do Yuri refeito
- Musica já funciona bem
- Enorme refactorização de código para usar Registry e ResourceManager
- Removidos quase todos os warnings
- Corrigir PBX
- Tirar warnings que faltam
- corrigido bug das setas que não eram decrementadas
- fuckin colisões no fuckin retina fuckin corrigidas 
- Pausa implementada
- Criado WaveManager
- Criada lógica de gestão de waves
- Já temos waves, podemos fazer níveis :D
- Criar classe Utils
- optimizar plists de waves (tirar dictionary displacement)
- Adicionado info de inimigos ao Config.plist. Agora carrega tipos dinamicamente
- Cada flecha só acerta num inimigo. 
- Criar mais waves
- Arrows posicionadas correctamente
- Acrescentar também uns bonecos aleatórios
- Fazer health
    - Inimigos têm vida - done
    - Barra de vida - done
    - Mudar para progress timer - done
- optimizar os imports > o Nuno disse que os imports devem ser feitos sempre q possível no .h
- Fazer health
    - Arquitectura dos estimulos "in place". Enemy.m
- corrigidas chamadas aos sons para irem ao config
- Select level layer 
- Melhorado sistema de particulas para não desaparecer completamente assim que colide com inimigo
- Reinicialização de singletons
- Progressão da wall está em percentagem
- Criado gestor de cena
- Criados métodos para carregar e salvar dados para ficheiros
- Criada classe GameState