/**            /**
*                *
* Coisas a fazer *
*                *
**/            **/

(JM)
- Fazer health
    - Inimigos tratam estimulos
- Implementar restart
    - Destruições
- Alterar lógica do vPos para ser relativo ao ecrã

- Fazer fogo e fumo nas walls
    - Ver este exemplo https://github.com/azamsharp/Desert-Race/blob/master/DesertRace/Car.m
- Por barra de vida na spritesheet

- Melhorar botões de setas e de pause
- Multiplas setas de acordo com o nível do yuri
    - já agora, os níveis do yuri
- Fazer Máquina de estado
    - Fazer gestor de cena
- som do impacto tem de ser corrigido
- Implementar skill tree - implementar a lógica e ver se fazemos uma spritesheet de bocadinhos para melhorar a performance (Daniela)
- Fazer menu em baixo
- setas a saír por cima da wall
    - isto na verdade é corrigir o zOrder
- Random shouts dos inimigos (Daniela)

- Menus com Cocos Builder! (Daniela, Ricardo)

- Destruição mais eficiente de projecteis (depois das colisões)
- Passar para os arqueiros do heroes  (João M)
    - Tratar das sprites do wood elf e do grand elf
    
- optimizar os imports > o Nuno disse que os imports devem ser feitos sempre q possível no .h

- Fazer projectiles do zealot
- Lógica de levar dano em cima do moat

/**           /**
*               *
* Coisas feitas *
*               *
**/           **/

- Criar pixel perfect collisions
- Criada estrutura base para o projecto
- Criadas colisões simples
- Actualizar background!
- Seleccionadas algumas musicas
- Adicionar som
- Tornar sprites mais visíveis -> Aumentar sprites
- Por inimigos a não vir no céu
- Splash screen
- Posicionar Yuri e flechas
- Add repeater do João
- Criado EnemyFactory (Singleton)
- Criar Toggle button!!
- Som de destruição (corrigir)
- Criado delay entre flechas no swipe
- zOrdering
- Factor de escala no retina
- Modo de disparo a funcionar bem
- Fazer animações simples (Daniela)
- Logótipo (PS)
- Dividir sprites do castelo em duas (PS)
- Lógica de dano da wall com todas as sprites
- Colisões entre Wall e Enemies
- Comportamento de ataque do peasant
- Mudança de animação do peasant
- Mt lento a mudar de castelo. Talvez seja melhor estar na sprite sheet
    - Resolvido carregando todas as sprites no init
    - Fica hardcoded, mas MUITO mais eficiente - Continua a poder ser possível meter na spritesheet
- Corrigir spritesheet com sprites mais recentes
- Adicionados dragões!
- Temporizações de entrada
- Criado Zealot
- Novas sprites e ataque do dragão
- Moat usage!
- Por iPads a funcionar por causa do Nojo (na pior das hipoteses tem de funcionar no do João M) DONE!
- Passar NSMutable para CCArrays (Amaral e Ricardo) DONE!
- Perceber ao certo os outputs de erro do CCSpriteFrameCache (Daniela)
- Por iPads a funcionar por causa do Nojo (na pior das hipoteses tem de funcionar no do João M)
- Passar NSMutable para CCArrays (Amaral e Ricardo)
- Resolver problemas das sprites do castelo e do moat
- inicializar som do jogo
- Particle System para dentro dos sprites (João M)
    - (Optimizar particle system) 
    - Tornar aquilo um projectile
    - Passar codigo do projectile para arrow
- Implementação de estimulos (StimulousPackage - Damage, Fire, Ice) (João M)
- zOrdering (Amaral) à espera dos menus para verificar... ver secção
- Projectiles mais piquenos! Yuri maior (ps) - DONE, falta zwoptex
- Sprites de morte dos inimigos (ps) - Done, falta implementar
- Sprites Idle do yuri (ps) - Done,
- Posição e rotação da flecha corrigida
- Implementação de estimulos (StimulousPackage - Damage, Fire, Ice) (João M)
- Sprites de morte dos inimigos (ps) - Done
- Wall está a ser destruída magicamente - Done
- Desenhar GUI (???) (health and other debug info)
- Desenhar Skill Tree (ps)
- Vida da wall
- Limitar as setas disparadas (quando acabam comeaça os nums negativos)
- Background sound para assim que começa
- Por dano apenas quando inimigos acabam o movimento (callback)
- ResourceManager - um singleton de variáveis de jogo
- Registry - um singleton para acedermos a entidades do jogo
- Impedir a animacao de disparo do Yuri quando nao ha setas
- Estrutura de pastas actualizada dentro do eks code
- Modo de interacção do Yuri refeito
- Musica já funciona bem
- Enorme refactorização de código para usar Registry e ResourceManager
- Removidos quase todos os warnings
- Corrigir PBX
- Tirar warnings que faltam
- corrigido bug das setas que não eram decrementadas
- fuckin colisões no fuckin retina fuckin corrigidas 
- Pausa implementada
- Criado WaveManager
- Criada lógica de gestão de waves
- Já temos waves, podemos fazer níveis :D
- Criar classe Utils
- optimizar plists de waves (tirar dictionary displacement)
- Adicionado info de inimigos ao Config.plist. Agora carrega tipos dinamicamente
- Cada flecha só acerta num inimigo. 
- Criar mais waves
- Arrows posicionadas correctamente
- Acrescentar também uns bonecos aleatórios
- Fazer health
    - Inimigos têm vida - done
    - Barra de vida - done
    - Mudar para progress timer - done